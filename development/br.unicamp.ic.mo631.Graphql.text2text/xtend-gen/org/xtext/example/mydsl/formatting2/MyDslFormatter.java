/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.formatting2;

import br.unicamp.ic.mo631.Graphql.model.Graphql.Attribute;
import br.unicamp.ic.mo631.Graphql.model.Graphql.Schema;
import br.unicamp.ic.mo631.Graphql.model.Graphql.Type;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;
  
  protected void _format(final Schema schema, @Extension final IFormattableDocument document) {
    EList<Type> _type = schema.getType();
    for (final Type type : _type) {
      document.<Type>format(type);
    }
  }
  
  protected void _format(final Attribute attribute, @Extension final IFormattableDocument document) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field type is undefined for the type Attribute"
      + "\nformat cannot be resolved");
  }
  
  public void format(final Object attribute, final IFormattableDocument document) {
    if (attribute instanceof XtextResource) {
      _format((XtextResource)attribute, document);
      return;
    } else if (attribute instanceof Attribute) {
      _format((Attribute)attribute, document);
      return;
    } else if (attribute instanceof Schema) {
      _format((Schema)attribute, document);
      return;
    } else if (attribute instanceof EObject) {
      _format((EObject)attribute, document);
      return;
    } else if (attribute == null) {
      _format((Void)null, document);
      return;
    } else if (attribute != null) {
      _format(attribute, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(attribute, document).toString());
    }
  }
}
