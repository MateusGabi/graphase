/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Schema";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	iv_ruleSchema=ruleSchema
	{ $current=$iv_ruleSchema.current; }
	EOF;

// Rule Schema
ruleSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Schema {'
		{
			newLeafNode(otherlv_0, grammarAccess.getSchemaAccess().getSchemaKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchemaAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSchemaAccess().getRightCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getTypeTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"type",
						lv_type_4_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getTypeTypeParserRuleCall_5_0());
				}
				lv_type_5_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSystemTypeParserRuleCall_0());
		}
		this_SystemType_0=ruleSystemType
		{
			$current = $this_SystemType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getInt0ParserRuleCall_1());
		}
		this_Int0_1=ruleInt0
		{
			$current = $this_Int0_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getFloatParserRuleCall_2());
		}
		this_Float_2=ruleFloat
		{
			$current = $this_Float_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getString0ParserRuleCall_3());
		}
		this_String0_3=ruleString0
		{
			$current = $this_String0_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBooleanParserRuleCall_4());
		}
		this_Boolean_4=ruleBoolean
		{
			$current = $this_Boolean_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getID0ParserRuleCall_5());
		}
		this_ID0_5=ruleID0
		{
			$current = $this_ID0_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getEnumParserRuleCall_6());
		}
		this_Enum_6=ruleEnum
		{
			$current = $this_Enum_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeNameEStringParserRuleCall_0_2_0());
					}
					lv_typeName_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"typeName",
							lv_typeName_2_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_isNullable_3_0='!'
					{
						newLeafNode(lv_isNullable_3_0, grammarAccess.getAttributeAccess().getIsNullableExclamationMarkKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "isNullable", true, "!");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_1_0_0());
					}
					lv_name_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeNameEStringParserRuleCall_1_2_0());
					}
					lv_typeName_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"typeName",
							lv_typeName_6_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_isArray_7_0=' @list'
					{
						newLeafNode(lv_isArray_7_0, grammarAccess.getAttributeAccess().getIsArrayListKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "isArray", true, " @list");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_2_0_0());
					}
					lv_name_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"name",
							lv_name_8_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeNameEStringParserRuleCall_2_2_0());
					}
					lv_typeName_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"typeName",
							lv_typeName_10_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_isArray_11_0=']'
					{
						newLeafNode(lv_isArray_11_0, grammarAccess.getAttributeAccess().getIsArrayRightSquareBracketKeyword_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "isArray", true, "]");
					}
				)
			)
			(
				(
					lv_isNullable_12_0='!'
					{
						newLeafNode(lv_isNullable_12_0, grammarAccess.getAttributeAccess().getIsNullableExclamationMarkKeyword_2_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "isNullable", true, "!");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_3_0_0());
					}
					lv_name_13_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"name",
							lv_name_13_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=':'
			{
				newLeafNode(otherlv_14, grammarAccess.getAttributeAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeNameEStringParserRuleCall_3_2_0());
					}
					lv_typeName_15_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"typeName",
							lv_typeName_15_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSystemType
entryRuleSystemType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemTypeRule()); }
	iv_ruleSystemType=ruleSystemType
	{ $current=$iv_ruleSystemType.current; }
	EOF;

// Rule SystemType
ruleSystemType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='type '
			{
				newLeafNode(otherlv_0, grammarAccess.getSystemTypeAccess().getTypeKeyword_0());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=' {'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemTypeAccess().getSpaceLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemTypeAccess().getAttributeAttributeParserRuleCall_3_0());
				}
				lv_attribute_3_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemTypeRule());
					}
					add(
						$current,
						"attribute",
						lv_attribute_3_0,
						"org.xtext.example.mydsl.MyDsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemTypeAccess().getAttributeAttributeParserRuleCall_4_0());
				}
				lv_attribute_4_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemTypeRule());
					}
					add(
						$current,
						"attribute",
						lv_attribute_4_0,
						"org.xtext.example.mydsl.MyDsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSystemTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleInt0
entryRuleInt0 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInt0Rule()); }
	iv_ruleInt0=ruleInt0
	{ $current=$iv_ruleInt0.current; }
	EOF;

// Rule Int0
ruleInt0 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='Int'
	{
		newLeafNode(otherlv_0, grammarAccess.getInt0Access().getIntKeyword());
	}
;

// Entry rule entryRuleFloat
entryRuleFloat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatRule()); }
	iv_ruleFloat=ruleFloat
	{ $current=$iv_ruleFloat.current; }
	EOF;

// Rule Float
ruleFloat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='Float'
	{
		newLeafNode(otherlv_0, grammarAccess.getFloatAccess().getFloatKeyword());
	}
;

// Entry rule entryRuleString0
entryRuleString0 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getString0Rule()); }
	iv_ruleString0=ruleString0
	{ $current=$iv_ruleString0.current; }
	EOF;

// Rule String0
ruleString0 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='String'
	{
		newLeafNode(otherlv_0, grammarAccess.getString0Access().getStringKeyword());
	}
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current; }
	EOF;

// Rule Boolean
ruleBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='Boolean'
	{
		newLeafNode(otherlv_0, grammarAccess.getBooleanAccess().getBooleanKeyword());
	}
;

// Entry rule entryRuleID0
entryRuleID0 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getID0Rule()); }
	iv_ruleID0=ruleID0
	{ $current=$iv_ruleID0.current; }
	EOF;

// Rule ID0
ruleID0 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='ID'
	{
		newLeafNode(otherlv_0, grammarAccess.getID0Access().getIDKeyword());
	}
;

// Entry rule entryRuleEnum
entryRuleEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumRule()); }
	iv_ruleEnum=ruleEnum
	{ $current=$iv_ruleEnum.current; }
	EOF;

// Rule Enum
ruleEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumAccess().getEnumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='attribute'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumAccess().getAttributeKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumAccess().getAttributeAttributeParserRuleCall_5_0());
				}
				lv_attribute_5_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumRule());
					}
					add(
						$current,
						"attribute",
						lv_attribute_5_0,
						"org.xtext.example.mydsl.MyDsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumAccess().getAttributeAttributeParserRuleCall_6_1_0());
					}
					lv_attribute_7_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumRule());
						}
						add(
							$current,
							"attribute",
							lv_attribute_7_0,
							"org.xtext.example.mydsl.MyDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='enumvalue'
		{
			newLeafNode(otherlv_9, grammarAccess.getEnumAccess().getEnumvalueKeyword_8());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumAccess().getEnumvalueEnumValueParserRuleCall_10_0());
				}
				lv_enumvalue_11_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumRule());
					}
					add(
						$current,
						"enumvalue",
						lv_enumvalue_11_0,
						"org.xtext.example.mydsl.MyDsl.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getEnumAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumAccess().getEnumvalueEnumValueParserRuleCall_11_1_0());
					}
					lv_enumvalue_13_0=ruleEnumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumRule());
						}
						add(
							$current,
							"enumvalue",
							lv_enumvalue_13_0,
							"org.xtext.example.mydsl.MyDsl.EnumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_12());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current; }
	EOF;

// Rule EnumValue
ruleEnumValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumValueAccess().getEnumValueAction_0(),
					$current);
			}
		)
		otherlv_1='EnumValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumValueAccess().getEnumValueKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumValueAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumValueAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumValueAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumValueRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='number'
			{
				newLeafNode(otherlv_5, grammarAccess.getEnumValueAccess().getNumberKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumValueAccess().getNumberInt1ParserRuleCall_4_1_0());
					}
					lv_number_6_0=ruleInt1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumValueRule());
						}
						set(
							$current,
							"number",
							lv_number_6_0,
							"org.xtext.example.mydsl.MyDsl.Int1");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumValueAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleInt1
entryRuleInt1 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInt1Rule()); }
	iv_ruleInt1=ruleInt1
	{ $current=$iv_ruleInt1.current.getText(); }
	EOF;

// Rule Int1
ruleInt1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Int'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getInt1Access().getIntKeyword());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
